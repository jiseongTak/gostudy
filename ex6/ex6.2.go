package main

import "fmt"

/*
비트 연산자
&	AND 비트 연산		정수
|	OR 비트 연산		정수
^	XOR 비트 연산		정수
&^	비트 클리어		정수
*/
func main() {
	//비트 연산자는 각 비트 단위로 연산을 수행
	//^A처럼 단독으로 사용가능 -> 비트 반전
	var (
		x1 int8   = 34 //0010 0010
		x2 int16  = 34 //0000 0000 0010 0010
		x3 uint8  = 34 //0010 0010
		x4 uint16 = 34 //0000 0000 0010 0010
	)

	fmt.Printf("^%d = %5d,\t %08b\n", x1, ^x1, uint8(^x1))
	fmt.Printf("^%d = %5d,\t %016b\n", x2, ^x2, uint16(^x2))
	fmt.Printf("^%d = %5d,\t %08b\n", x3, ^x3, ^x3)
	fmt.Printf("^%d = %5d,\t %016b\n", x4, ^x4, ^x4)
}

/*
비트클리어 &^
^를 먼저 수행하고 나서 &를 수행한다
10 &^ 2
0000 0010 -> 1111 1101 ^ 연산 먼저 수행
0000 1010 & 1111 1101 -> 0000 1000
10의 2번째만 비트만 0으로 바뀜
특정 비트만 0으로 바꾸고 싶을 때 사용
*/
