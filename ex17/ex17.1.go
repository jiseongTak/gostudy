package main

import (
	"fmt"
	"math/rand"
	"time"
)

func main() {
	rand.Seed(time.Now().UnixNano()) //시간 값을 랜덤 시드로 설정

	n := rand.Intn(100)
	fmt.Println(n)
}

/*
컴퓨터의 논리 회로와 산술 연산은 랜덤값을 만들기에 적합하지 않다.
왜냐하면 어떤 수식을 쓰든 같은 입력이면 같은 결괏값을 출력하기 때문이다.
현재 컴퓨터로는 완전한 랜덤값을 만들 수가 없어 마치 랜덤처럼 보이는 유사 랜덤 알고리즘을 사용
그래서 단순히 rand.Intn() 함수만 사용하면 매변 똑같은 값이 생성되는 문제가 있다.
랜덤값이 산출되는 초깃값이 같기 때문이다. 이 초깃값을 랜덤 시드라고 말한다.
프로그램이 실행할 때마다 다른 랜덤값이 산출되려면 매번 랜덤 시드를 다른 값으로 설정해줘야 한다.

현재 시각 값을 이용해 시드값을 설정
Now() 는 Time 객체를 반환하는데 랜덤 시드값은 int64 타입이므로 Time 객체의 메서드인
UnixNano() 메서드를 통해서 int64값으로 변환 UnixNano() 메서드는
UTC 시간 기준인 1970년 1월 1일 부터 Time 객체가 나타내는 시각까지 경과한 시간을
나노초 단위로 나타낸 값을 반환
*/
